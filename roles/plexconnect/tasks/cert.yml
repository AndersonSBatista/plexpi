---
- name: FILE | Ensure directory exists for PlexConnect cert and keys
  file:
    path: "{{ plexconnect_cert_dir }}"
    state: directory

- name: STAT | Check if PlexConnect certificate exists
  stat:
    path: "{{ plexconnect_cert_path }}"
  register: cert_path

- name: COMMAND | Generate OpenSSL CSR
  command: openssl req -new -nodes -newkey rsa:2048 -out "{{ plexconnect_cert_path }}" -keyout "{{ plexconnect_cert_dir }}/trailers.key" -x509 -days 7300 -subj "/C=US/CN=trailers.apple.com"
  args:
    creates: "{{ plexconnect_cert_path }}"
  when: cert_path.stat.exists == False

- name: COMMAND | Generate self-signed OpenSSL certificate
  command: openssl x509 -in "{{ plexconnect_cert_path }}" -outform der -out "{{ plexconnect_cert_dir }}/trailers.cer"
  when: cert_path.stat.exists == False

- name: FILE | Change trailers.cer owner
  file:
    path: "{{ plexconnect_cert_dir }}/{{ item.file }}"
    owner: pi
    group: pi
  with_items:
    - { file: 'trailers.cer' }
    - { file: 'trailers.key' }
    - { file: 'trailers.pem' }

- name: COMMAND | Add key to the certificate
  command: bash -c 'cat trailers.key >> trailers.pem'
  args:
    chdir: "{{ plexconnect_cert_dir }}"
  when: cert_path.stat.exists == False
